{"version":3,"sources":["webpack:///./src/components/List/index.jsx","webpack:///./src/templates/List.jsx"],"names":["List","_ref","data","location","page","getPage","allPosts","getPosts","postCount","size","posts","slice","CONTENT_PER_PAGE","react_default","a","createElement","react","PostsWrapper","Helmet_default","name","content","map","post","node","path","frontmatter","get","images","tags","Card","Object","assign","key","Pagination","propTypes","PropTypes","shape","isRequired","__webpack_require__","d","__webpack_exports__","pageQuery","ListTemplate","props","layout","components_List"],"mappings":"uOAWMA,EAAO,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACdC,EAAOC,YAAQ,EAARA,CAAWF,GAClBG,EAAWC,YAASL,GACpBM,EAAYC,eAAKH,GACjBI,EAAQC,iBACXP,EAAO,GAAKQ,mBACbR,EAAOQ,mBAFKD,CAGZL,GAEF,OACEO,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACED,EAAAC,EAAAC,cAAA,8BAGAF,EAAAC,EAAAC,cAAA,QAAMI,KAAK,WAAWC,QAAQ,mBAE/BC,cAAI,SAACC,GACJ,GAAuB,UAAnBA,EAAKC,KAAKC,KAAkB,CAC9B,IAAMC,EAAcC,cAAI,mBAAJA,CAAwBJ,GACpCK,EAAuBF,EAAvBE,OAAQC,EAAeH,EAAfG,KAAMJ,EAASC,EAATD,KAEtB,OACEX,EAAAC,EAAAC,cAACc,EAAA,EAADC,OAAAC,OAAA,CAAMC,IAAKR,EAAMA,KAAMA,EAAMG,OAAQA,EAAQC,KAAMA,GAAUH,IAIjE,OAAO,MAVRJ,CAWEX,IAELG,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYzB,UAAWA,EAAWL,SAAUA,MAKlDH,EAAKkC,UAAY,CACfhC,KAAMiC,IAAUC,MAAM,IAAIC,WAC1BlC,SAAUgC,IAAUC,MAAM,IAAIC,YAGjBrC,QCpDfsC,EAAAC,EAAAC,EAAA,8BAAAC,IAWeC,UANM,SAAAC,GAAK,OACxB9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAWD,EACV9B,EAAAC,EAAAC,cAAC8B,EAASF,KAFd,IAQaF,EAAS","file":"component---src-templates-list-jsx-6612cbafddce30d15c59.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { size, slice, map, get } from 'lodash/fp';\nimport PostsWrapper from 'components/Common/PostsWrapper';\nimport Card from 'components/Common/Card';\nimport Pagination from 'components/Common/Pagination';\nimport getPosts from 'utils/getPosts';\nimport getPage from 'utils/getPage';\nimport { CONTENT_PER_PAGE } from 'constants';\n\nconst List = ({ data, location }) => {\n  const page = getPage(2)(location);\n  const allPosts = getPosts(data);\n  const postCount = size(allPosts);\n  const posts = slice(\n    (page - 1) * CONTENT_PER_PAGE,\n    page * CONTENT_PER_PAGE\n  )(allPosts);\n\n  return (\n    <Fragment>\n      <PostsWrapper>\n        <Helmet>\n          <title>\n            WONISM | POST\n          </title>\n          <meta name=\"og:title\" content=\"WONISM | POST\" />\n        </Helmet>\n        {map((post) => {\n          if (post.node.path !== '/404/') {\n            const frontmatter = get('node.frontmatter')(post);\n            const { images, tags, path } = frontmatter;\n\n            return (\n              <Card key={path} path={path} images={images} tags={tags} {...frontmatter} />\n            );\n          }\n\n          return null;\n        })(posts)}\n      </PostsWrapper>\n      <Pagination postCount={postCount} location={location} />\n    </Fragment>\n  );\n};\n\nList.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/layout';\nimport List from 'components/List';\n\nconst ListTemplate = props => (\n  <Layout {...props}>\n    <List {...props} />\n  </Layout>\n);\n\nexport default ListTemplate;\n\nexport const pageQuery = graphql`\n  query ListQuery {\n    allMarkdownRemark (\n      filter: { frontmatter: { hide: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            type\n            title\n            images\n            path\n            tags\n            date\n            summary\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}